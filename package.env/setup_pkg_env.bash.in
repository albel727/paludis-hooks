#!/bin/bash
#
# Helper functions to use from /etc/paludis/bashrc and
# package environment control files.
#
# Copyright 2014-2016 by Alex Turbov <i.zaufi@gmail.com>
#

source ${PALUDIS_EBUILD_DIR}/echo_functions.bash

#
# Get current GCC version
#
phenv-get-gcc-version()
{
    local gcc_bin=${CC:-gcc}
    ${gcc_bin} --version | head -n 1 | sed 's,.* \([0-9]\.[0-9]\.[0-9]\)$,\1,'
}

#
# Get a number of CPUs available
#
phenv-get-cpu-available()
{
    grep -c ^processor /proc/cpuinfo
}

#BEGIN Helper functions named after toolchain-funcs.eclass
#
# Helper function to build a full path to requested GCC utility
# based on current GCC (found in `PATH`) or `CC` environment variable.
#
# $1 -- program name
#
_phenv-getPROG()
{
    local prog="${1}"
    echo /usr/${CHOST}/gcc-bin/$(phenv-get-gcc-version)/gcc-${prog}
}
#
# Get a full path to GCC's `ar` wrapper
#
phenv-getAR()
{
    _phenv-getPROG ar
}
#
# Get a full path to GCC's `nm` wrapper
#
phenv-getNM()
{
    _phenv-getPROG nm
}
#
# Get a full path to GCC's `ranlib` wrapper
#
phenv-getRANLIB()
{
    _phenv-getPROG ranlib
}
#END Helper functions named after toolchain-funcs.eclass

#
# The main function to be used from ${PALUDIS_CONFIG_DIR}/bashrc
#
setup_pkg_env()
{
    [ ! -f ${PALUDIS_CONFIG_DIR}/package_env.conf ] && return
    # Select configured environments
    # NOTE It is important to apply them in the same order! (even duplicates)
    local envs=`for i in \`egrep "^${CATEGORY}/(${PN}|\*)(:[^\s]+)?\s" ${PALUDIS_CONFIG_DIR}/package_env.conf | sed 's,[^ ]\+\s,,'\`; do echo "${i}"; done`
    for conf in $envs; do
        if [ -f ${PALUDIS_CONFIG_DIR}/env.conf.d/${conf}.conf ]; then
            source ${PALUDIS_CONFIG_DIR}/env.conf.d/${conf}.conf
        fi
        # NOTE Silently ignore undefined environment.
        # To avoid any output from bashrc, as supposed by [docs](http://paludis.exherbo.org/configuration/bashrc.html)
    done
}

# Do it!
setup_pkg_env

# Bring flag-o-matic.eclass into the scope, so env files may use functions from it to manupulate compiler/linker flags
inherit flag-o-matic

# kate: hl bash;
